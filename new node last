#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};
typedef struct node Node;

Node *traverse(Node *p) {
    while (p != NULL) {
        printf("element: %d\n", p->data);
        p = p->next;
    }
}


Node *insertAtEnd(Node *head, int valueToInsert) {
    Node *newNode = (Node *)malloc(sizeof(Node));


    newNode->data = valueToInsert;
    newNode->next = NULL;


    if (head == NULL) {
        head = newNode;
    } else {
        Node *current = head;
        while (current->next != NULL) {
            current = current->next;
        }
        current->next = newNode;
    }

    return head;
}

int main() {
    Node *head, *second, *third, *fourth, *fifth;
    head = (Node *)malloc(sizeof(Node));
    second = (Node *)malloc(sizeof(Node));
    third = (Node *)malloc(sizeof(Node));
    fourth = (Node *)malloc(sizeof(Node));
    fifth = (Node *)malloc(sizeof(Node));

    head->data = 5;
    second->data = 10;
    third->data = 15;
    fourth->data = 20;
    fifth->data = 25;

    head->next = second;
    second->next = third;
    third->next = fourth;
    fourth->next = fifth;
    fifth->next = NULL;

    printf("Original linked list:\n");
    traverse(head);

    int valueToInsert = 30;

    printf("\nAfter inserting node with value %d at the end:\n", valueToInsert);
    head = insertAtEnd(head, valueToInsert);
    traverse(head);


    while (head != NULL) {
        Node *temp = head;
        head = head->next;
        free(temp);
    }

    return 0;
}

